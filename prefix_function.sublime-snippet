<snippet>
	<content><![CDATA[
vector<int> prefix_function(string s) {
    int n = (int)s.length();
    vector<int> pi(n);
    for (int i = 1; i < n; i++) {
        int j = pi[i-1];
        while (j > 0 && s[i] != s[j])
            j = pi[j-1];
        if (s[i] == s[j])
            j++;
        pi[i] = j;
    }
    return pi;
}
We compute the prefix values π[i] in a loop by iterating from i=1 to i=n−1 (π[0] just gets assigned with 0).
To calculate the current value π[i] we set the variable j denoting the length of the best suffix for i−1. Initially j=π[i−1].
Test if the suffix of length j+1 is also a prefix by comparing s[j] and s[i]. If they are equal then we assign π[i]=j+1, otherwise we reduce j to π[j−1] and repeat this step.
If we have reached the length j=0 and still don't have a match, then we assign π[i]=0 and go to the next index i+1.
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	 <tabTrigger>prefix_function</tabTrigger> 
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
